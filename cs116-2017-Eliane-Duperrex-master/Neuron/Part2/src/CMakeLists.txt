cmake_minimum_required (VERSION 2.6)
project (Neuron)

set(CMake_CXX_FLAGS "-W -Wall -pedantic -std=c++11")
set(CMAKE_BINARY_DIR ${CMAKE_SOURCE_DIR}/bin)
set(PROJECT_BINARY_DIR ${CMAKE_SOURCE_DIR}/build)
#set(CMAKE_CURRENT_BINARY_DIR $../build)
#set(CMAKE_CURRENT_SOURCE_DIR $../build)
set(gtest_SOURCE_DIR $../doc)
add_definitions(-std=c++11)

enable_testing()

#add_subdirectory(gtest)

include_directories(${gtest_SOURCE_DIR}/include ${gtest_SOURCE_DIR})

add_executable(../bin/Neuron neuron.cpp main.cpp network.cpp )
add_executable(../bin/UnitTest test.cpp neuron.cpp network.cpp)

target_link_libraries(../bin/UnitTest gtest gtest_main)

add_test(UnitTest UnitTest)

###### Doxygen generation ######

# We first check if Doxygen is present.
find_package(Doxygen)
if(DOXYGEN_FOUND)

    # We then check if the Doxygen.in configuration file exists
    IF(NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in)
        message(FATAL_ERROR "Doxygen configuration file is needed to build the documentation:
         - ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in not found.
         - Generate one in the project folder with doxygen -g Doxyfile.in")
    ENDIF(NOT EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in)

    # We configure the doxyfile for make.
    configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
    add_custom_target(doc
        ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    )
ELSE(DOXYGEN_FOUND)
    message(FATAL_ERROR "Doxygen is needed to build the documentation.")
ENDIF(DOXYGEN_FOUND)

